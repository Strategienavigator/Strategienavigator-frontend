name: tests
on:
  push:
    branches:
      - main
      - dev
  pull_request:

env:
  DB_PASSWORD: 'super_secret_password'


jobs:
  cypress-run:
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_DATABASE: toolbox
          MYSQL_ROOT_PASSWORD: '${{env.DB_PASSWORD}}'
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    runs-on: ubuntu-latest
    steps:
      - name: clone backend
        uses: actions/checkout@v3
        with:
          repository: 'ricom/toolbox-backend'
          path: 'backend'
      - name: clone frontend
        uses: actions/checkout@v3
        with:
          path: 'frontend'
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
      - name: Setup Composer and PHP
        uses: php-actions/composer@v6
        with:
          version: 2
          working_dir: 'backend'
      - name: setup backend
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          APP_ENV: local
          APP_URL: http://localhost:8000
          APP_DEBUG: false
          FRONTEND_URL: http://localhost:8000
          EMAIL_FILTER_DISABLED: true
        working-directory: backend
        run: |
          cp .env.example .env
          php artisan key:generate
          php artisan migrate --seed
          php artisan passport:install > passport_keys.log
          key=$(tail -n 1 passport_keys.log | perl -lne 'print $1 if /^.*: (.*)$/')
          echo "CLIENT_SECRET=$key" >> $GITHUB_ENV
      - name: remove dev dependencies with composer
        uses: php-actions/composer@v6
        with:
          dev: 'no'
          version: 2
          args: '--optimize-autoloader'
          working_dir: 'backend'

      - name: cache larvel config
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          APP_ENV: production
          APP_URL: http://localhost:8000
          APP_DEBUG: false
          FRONTEND_URL: http://localhost:3000
          EMAIL_FILTER_DISABLED: true
          MAIL_FROM_ADDRESS: strategienavigator@jade-hs.de
        working-directory: backend
        run: |
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
      - name: start backend server
        working-directory: backend
        id: backendStart
        run: |
          nohup php artisan serve > phpd.log 2>&1 &
          echo "PHP_BACKEND_SERVER_PID=$!" >> $GITHUB_ENV

      - name: install serve
        run: npm install -g serve
      - name: Setup Python
        uses: actions/setup-python@v3

      - name: Cypress install
        uses: cypress-io/github-action@v2
        with:
          runTests: false
          working-directory: frontend
      - name: build frontend and install frontend
        working-directory: frontend
        env:
          REACT_APP_CLIENT_ID: 2
          REACT_APP_CLIENT_SECRET: '${{env.CLIENT_SECRET}}'
          REACT_APP_API: 'http://localhost:8000/'
        run: |
          npm run build
          cd build
          zip -r build *
          cd ../../backend/
          python frontend_patcher.py -s ../frontend/build/build.zip -t .

      - name: Cypress run tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          working-directory: frontend
          wait-on: 'http://localhost:8000'
        env:
          CYPRESS_VIDEO: false
          CYPRESS_BASE_URL: 'http://localhost:8000'
          CYPRESS_BACKEND_URL: 'http://localhost:8000'
          CYPRESS_DB_HOST: 'localhost'
          CYPRESS_DB_USER: 'root'
          CYPRESS_DB_PASSWORD: '${{env.DB_PASSWORD}}'
          CYPRESS_DB_PORT: ${{ job.services.mysql.ports[3306] }}
          CYPRESS_APP_CLIENT_SECRET: ${{ env.CLIENT_SECRET }}
          CYPRESS_APP_CLIENT_ID: 2
      - name: added logs as artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: logs
          path: |
            backend/phpd.log
            backend/storage/logs/
            backend/passport_keys.log
            frontend/cypress/screenshots
            frontend/cypress/logs
      - name: stop backend server
        if: always() && steps.backendStart.outcome == 'success'
        working-directory: backend
        run: |
          kill -3 $PHP_BACKEND_SERVER_PID
  cypress-ct-run:
    runs-on: ubuntu-latest
    steps:
      - name: clone frontend
        uses: actions/checkout@v3
      - name: Cypress run component tests
        uses: cypress-io/github-action@v2
        with:
          command: npx cypress run-ct
        env:
          CYPRESS_VIDEO: false
